// –§—É–Ω–∫—Ü—ñ—ó –¥–ª—è —Ä–æ–±–æ—Ç–∏ –∑ —Ç–æ–≤–∞—Ä–∞–º–∏ —Ç–∞ –º–æ–¥–∞–ª—å–Ω–∏–º –≤—ñ–∫–Ω–æ–º

// === –ó–ê–í–ê–ù–¢–ê–ñ–ï–ù–ù–Ø –î–ê–ù–ò–• ===
function loadProducts() {
    fetch(`${API_BASE}/products`)
        .then(response => response.json())
        .then(products => {
            const productsGrid = document.getElementById('productsGrid');
            productsGrid.innerHTML = '';
            products.forEach(product => {
                const card = document.createElement('div');
                card.className = 'product-card';
                card.onclick = () => {
                    showSelectedProduct(product);
                };
                card.innerHTML = `
                    <div class="product-image">
                        ${product.imageURL ? `<img src="${product.imageURL}" alt="${product.name}" onerror="this.style.display='none'; this.nextElementSibling.style.display='flex';">` : ''}
                        <div style="display: ${product.imageURL ? 'none' : 'flex'}; align-items: center; justify-content: center; width: 100%; height: 100%; font-size: 48px; color: #6c757d;">üì¶</div>
                    </div>
                    <div class="product-info">
                        <h3 class="product-name">${product.name}</h3>
                        <p class="product-firm">${product.firm}</p>
                        <p class="product-price">${product.price}‚Ç¥</p>
                        <p class="product-stock ${product.quantity > 0 ? 'in-stock' : 'out-of-stock'}">${product.quantity > 0 ? '–í –Ω–∞—è–≤–Ω–æ—Å—Ç—ñ: ' + product.quantity + ' —à—Ç.' : '–ù–µ–º–∞—î –Ω–∞ —Å–∫–ª–∞–¥—ñ'}</p>
                    </div>
                `;
                productsGrid.appendChild(card);
            });
        })
        .catch(error => showResult('‚ùå –ü–æ–º–∏–ª–∫–∞ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è —Ç–æ–≤–∞—Ä—ñ–≤: ' + error.message, 'error', 'shopping'));
}

function loadProductsForAdmin() {
    fetch(`${API_BASE}/products`)
        .then(response => response.json())
        .then(products => {
            // –ó–∞–ø–æ–ª–Ω—è–µ–º —Å–µ–ª–µ–∫—Ç —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Ç–æ–≤–∞—Ä–∞–º–∏
            const adminSelect = document.getElementById('adminProducts');
            if (adminSelect) {
                adminSelect.innerHTML = '<option value="">–û–±–µ—Ä—ñ—Ç—å —Ç–æ–≤–∞—Ä...</option>';
                products.forEach(product => {
                    const option = document.createElement('option');
                    option.value = product.id;
                    option.textContent = `${product.name} - ${product.price}‚Ç¥ [–°–∫–ª–∞–¥: ${product.quantity}]`;
                    adminSelect.appendChild(option);
                });
            }
            
            // –ó–∞–ø–æ–ª–Ω—è–µ–º —Å–µ–ª–µ–∫—Ç —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Ç–æ–≤–∞—Ä–æ–≤
            const editSelect = document.getElementById('editProductSelect');
            if (editSelect) {
                editSelect.innerHTML = '<option value="">–û–±–µ—Ä—ñ—Ç—å —Ç–æ–≤–∞—Ä...</option>';
                products.forEach(product => {
                    const option = document.createElement('option');
                    option.value = product.id;
                    option.textContent = `${product.name} (${product.firm}) - ${product.price}‚Ç¥`;
                    editSelect.appendChild(option);
                });
            }
        })
        .catch(error => showResult('‚ùå –ü–æ–º–∏–ª–∫–∞ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è —Ç–æ–≤–∞—Ä—ñ–≤: ' + error.message, 'error', 'admin'));
}

// === –ú–û–î–ê–õ–¨–ù–ï –í–Ü–ö–ù–û –¢–û–í–ê–†–£ ===
function showSelectedProduct(product) {
    selectedProductId = product.id;
    openProductModal(product);
}

function openProductModal(product) {
    selectedProductId = product.id;
    
    // –ó–∞–ø–æ–≤–Ω—é—î–º–æ –∑–∞–≥–∞–ª—å–Ω—É —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—é
    document.getElementById('modalProductName').textContent = product.name;
    document.getElementById('modalProductTitle').textContent = product.name;
    document.getElementById('modalProductFirm').textContent = product.firm;
    document.getElementById('modalProductPrice').textContent = product.price + '‚Ç¥';
    
    // –í—Å—Ç–∞–Ω–æ–≤–ª—é—î–º–æ –∑–æ–±—Ä–∞–∂–µ–Ω–Ω—è
    const imageContainer = document.getElementById('modalProductImage');
    if (product.imageURL) {
        imageContainer.innerHTML = `<img src="${product.imageURL}" alt="${product.name}" onerror="this.style.display='none'; this.parentElement.innerHTML='<div style=&quot;font-size: 48px; color: #6c757d;&quot;>üì¶</div>';">`;
    } else {
        imageContainer.innerHTML = '<div style="font-size: 48px; color: #6c757d;">üì¶</div>';
    }
    
    // –í—Å—Ç–∞–Ω–æ–≤–ª—é—î–º–æ —Å—Ç–∞—Ç—É—Å –Ω–∞—è–≤–Ω–æ—Å—Ç—ñ
    const stockElement = document.getElementById('modalProductStock');
    if (product.quantity > 0) {
        stockElement.className = 'stock-status in-stock';
        stockElement.innerHTML = `‚úÖ –í –Ω–∞—è–≤–Ω–æ—Å—Ç—ñ: ${product.quantity} —à—Ç.`;
    } else {
        stockElement.className = 'stock-status out-of-stock';
        stockElement.innerHTML = '‚ùå –ù–µ–º–∞—î –Ω–∞ —Å–∫–ª–∞–¥—ñ';
    }
    
    // –û—Ç—Ä–∏–º—É—î–º–æ –¥–µ—Ç–∞–ª—ñ —Ç–æ–≤–∞—Ä—É –∑ —Å–µ—Ä–≤–µ—Ä–∞
    fetch(`${API_BASE}/products/${product.id}`)
        .then(response => response.json())
        .then(detailedProduct => {
            displayProductCharacteristics(detailedProduct);
        })
        .catch(error => {
            console.error('–ü–æ–º–∏–ª–∫–∞ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –¥–µ—Ç–∞–ª–µ–π —Ç–æ–≤–∞—Ä—É:', error);
            displayBasicCharacteristics(product);
        });
    
    // –û—á–∏—â—É—î–º–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç –ø–æ–∫—É–ø–∫–∏
    document.getElementById('modalPurchaseResult').style.display = 'none';
    
    // –ü–æ–∫–∞–∑—É—î–º–æ –º–æ–¥–∞–ª—å–Ω–µ –≤—ñ–∫–Ω–æ
    document.getElementById('productModal').style.display = 'block';
}

function closeProductModal() {
    document.getElementById('productModal').style.display = 'none';
    selectedProductId = null;
}

function displayProductCharacteristics(product) {
    const characteristicsList = document.getElementById('characteristicsList');
    let characteristics = [];
    
    // –ó–∞–≥–∞–ª—å–Ω—ñ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏
    characteristics.push({ label: '–ù–∞–∑–≤–∞', value: product.name });
    characteristics.push({ label: '–í–∏—Ä–æ–±–Ω–∏–∫', value: product.firm });
    characteristics.push({ label: '–¶—ñ–Ω–∞', value: product.price + '‚Ç¥' });
    characteristics.push({ label: '–ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞ –∑–Ω–∏–∂–∫–∞', value: product.maxDiscountPercentage + '%' });
    characteristics.push({ label: '–ö—ñ–ª—å–∫—ñ—Å—Ç—å –Ω–∞ —Å–∫–ª–∞–¥—ñ', value: product.quantity + ' —à—Ç.' });
    
    // –°–ø–µ—Ü–∏—Ñ—ñ—á–Ω—ñ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏ –∑–∞–ª–µ–∂–Ω–æ –≤—ñ–¥ —Ç–∏–ø—É —Ç–æ–≤–∞—Ä—É
    if (product.diagonalSize !== undefined) {
        // –ù–æ—É—Ç–±—É–∫
        characteristics.push({ label: '–î—ñ–∞–≥–æ–Ω–∞–ª—å –µ–∫—Ä–∞–Ω—É', value: product.diagonalSize + '"' });
        characteristics.push({ label: '–í–∞–≥–∞', value: product.weight + ' –∫–≥' });
        characteristics.push({ label: '–ö—ñ–ª—å–∫—ñ—Å—Ç—å —è–¥–µ—Ä CPU', value: product.cpuCoreCount });
        characteristics.push({ label: "–û–±'—î–º –ø–∞–º'—è—Ç—ñ", value: product.memoryCount + ' –ú–ë' });
    } else if (product.maxSimValue !== undefined) {
        // –ú–æ–±—ñ–ª—å–Ω–∏–π —Ç–µ–ª–µ—Ñ–æ–Ω –∞–±–æ —Å–º–∞—Ä—Ç—Ñ–æ–Ω
        characteristics.push({ label: '–¢–∏–ø –∫–æ–Ω—Ç—Ä–∞–∫—Ç—É', value: product.isContract ? '–ó –∫–æ–Ω—Ç—Ä–∞–∫—Ç–æ–º' : '–ë–µ–∑ –∫–æ–Ω—Ç—Ä–∞–∫—Ç—É' });
        characteristics.push({ label: '–ú–∞–∫—Å–∏–º—É–º SIM-–∫–∞—Ä—Ç', value: product.maxSimValue });
        
        if (product.os !== undefined) {
            // –°–º–∞—Ä—Ç—Ñ–æ–Ω
            characteristics.push({ label: '–û–ø–µ—Ä–∞—Ü—ñ–π–Ω–∞ —Å–∏—Å—Ç–µ–º–∞', value: product.os });
            if (product.installedPrograms && product.installedPrograms.length > 0) {
                characteristics.push({ label: '–í—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ñ –ø—Ä–æ–≥—Ä–∞–º–∏', value: product.installedPrograms.join(', ') });
            }
        }
    }
    
    // –ì–µ–Ω–µ—Ä—É—î–º–æ HTML –¥–ª—è —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫
    characteristicsList.innerHTML = characteristics.map(char => `
        <div class="characteristic-item">
            <span class="characteristic-label">${char.label}:</span>
            <span class="characteristic-value">${char.value}</span>
        </div>
    `).join('');
}

function displayBasicCharacteristics(product) {
    const characteristicsList = document.getElementById('characteristicsList');
    const characteristics = [
        { label: '–ù–∞–∑–≤–∞', value: product.name },
        { label: '–í–∏—Ä–æ–±–Ω–∏–∫', value: product.firm },
        { label: '–¶—ñ–Ω–∞', value: product.price + '‚Ç¥' },
        { label: '–ö—ñ–ª—å–∫—ñ—Å—Ç—å –Ω–∞ —Å–∫–ª–∞–¥—ñ', value: product.quantity + ' —à—Ç.' }
    ];
    
    characteristicsList.innerHTML = characteristics.map(char => `
        <div class="characteristic-item">
            <span class="characteristic-label">${char.label}:</span>
            <span class="characteristic-value">${char.value}</span>
        </div>
    `).join('');
}

// –ó–∞–∫—Ä–∏—Ç—Ç—è –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –≤—ñ–∫–Ω–∞ –ø—Ä–∏ –∫–ª—ñ–∫—É –ø–æ–∑–∞ –Ω–∏–º
window.onclick = function(event) {
    const modal = document.getElementById('productModal');
    if (event.target === modal) {
        closeProductModal();
    }
} 